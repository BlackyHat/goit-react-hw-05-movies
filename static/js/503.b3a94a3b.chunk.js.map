{"version":3,"file":"static/js/503.b3a94a3b.chunk.js","mappings":"oNAEaA,EAAYC,EAAAA,GAAAA,GAAH,wdAoBTC,EAAUD,EAAAA,GAAAA,GAAH,yC,mBCApB,EAjBqB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACH,EAAD,iBACGC,QADH,IACGA,OADH,EACGA,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACX,UAACT,EAAD,CAAoBU,UAAU,cAA9B,UACG,KACD,SAAC,MAAD,KACA,SAAC,KAAD,CAASC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA7C,SACGI,GAASC,MAJEF,EADL,KAWlB,C,qGCSD,EA1BkB,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,kBAAMH,SAPe,SAAAI,GACrBA,EAAEC,iBACFL,EAASE,GACTC,EAAS,GACV,EAGC,WACE,kBAAOG,QAAQ,gBAAf,UACE,kBACEC,KAAK,OACLd,GAAG,gBACHe,MAAON,EACPO,SAAU,SAAAL,GACRD,EAASC,EAAEM,OAAOF,MACnB,OAGL,mBAAQD,KAAK,SAAb,sBAGL,E,8BCID,EAzBe,WAAO,IAAD,EACnB,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAesB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMZ,EAAK,UAAGW,EAAaE,IAAI,gBAApB,QAAgC,GAa3C,OAPAC,EAAAA,EAAAA,YAAU,WACHd,IAGLe,EAAAA,EAAAA,IAAgB,CAAEf,MAAAA,IAASgB,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBR,EAAUQ,EAA3B,GACjC,GAAE,CAACjB,KAGF,6BACE,eAAIN,UAAU,kBAAd,4BACA,SAAC,EAAD,CAAWI,SAdO,SAAAE,GACpBY,EAA0B,KAAVZ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,KAaG,SAACkB,EAAA,EAAD,CAAc/B,OAAQA,MAG3B,C","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  padding: 4px;\n  list-style-type: none;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  & a {\n    text-decoration: none;\n    color: #2f2f2f;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    transition: color 350ms linear, font-weight 350ms linear;\n\n    &:hover {\n      color: #000000;\n      font-weight: 500;\n    }\n  }\n`;\nexport const Gallery = styled.ul`\n  padding: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem, Gallery } from './MovieGallery.styled';\nimport { FcFilmReel } from 'react-icons/fc';\n\nconst MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Gallery>\n      {movies?.map(({ id, title, name }) => (\n        <MovieItem key={id} className=\"movie__item\">\n          {' '}\n          <FcFilmReel />\n          <NavLink to={`/movies/${id}`} state={{ from: location }}>\n            {title || name}\n          </NavLink>\n        </MovieItem>\n      ))}\n    </Gallery>\n  );\n};\n\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitChange = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={onSubmitChange}>\n      <label htmlFor=\"movies-search\">\n        <input\n          type=\"text\"\n          id=\"movies-search\"\n          value={query}\n          onChange={e => {\n            setQuery(e.target.value);\n          }}\n        />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBox;\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MovieGallery from '../components/MovieGallery/MovieGallery';\nimport { getMovieByQuery } from 'components/services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const onChangeQuery = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getMovieByQuery({ query }).then(({ results }) => setMovies(results));\n  }, [query]);\n\n  return (\n    <main>\n      <h1 className=\"visually-hidden\">Movies search</h1>\n      <SearchBox onSubmit={onChangeQuery} />\n      <MovieGallery movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieItem","styled","Gallery","movies","location","useLocation","map","id","title","name","className","to","state","from","onSubmit","useState","query","setQuery","e","preventDefault","htmlFor","type","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getMovieByQuery","then","results","MovieGallery"],"sourceRoot":""}