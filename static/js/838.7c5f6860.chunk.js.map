{"version":3,"file":"static/js/838.7c5f6860.chunk.js","mappings":"wRAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAa,gBAAGE,EAAH,EAAGA,MAAH,eAAC,UAChCA,EAAMC,WAAWC,QADc,IAElCC,gBAAiBH,EAAMI,QAAQC,WAAWC,MAC1CC,eAAgB,OAChBC,MAAO,UACP,UAAW,CACTA,MAAO,YANyB,I,mBCuEpC,EA3DyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACC,EAAA,GAAD,CAAMH,MAAI,EAACI,GAAI,GAAIC,GAAI,EAAGC,GAAI,CAAEC,OAAQ,UAAxC,UACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAMH,GAAI,CAAEI,SAAU,KAAtB,UACE,UAACtB,EAAD,CAASuB,GAAE,kBAAaX,EAAKY,IAAMC,MAAO,CAAEC,KAAMb,GAAlD,WACE,SAACc,EAAA,EAAD,CACET,GAAI,CAAEU,UAAW,KACjBC,UAAU,MACVC,OAAO,MACPC,OAAOC,EAAAA,EAAAA,GAAYpB,EAAKqB,aACxBC,MAAOtB,EAAKuB,KACZC,IAAKxB,EAAKuB,QAEZ,UAACE,EAAA,EAAD,CACEnB,GAAI,CACFoB,WAAY,EACZC,QAAS,OACTC,cAAe,SACfC,GAAI,QALR,WAQE,UAACC,EAAA,EAAD,CACExB,GAAI,CACFqB,QAAS,OACTI,WAAY,SACZC,eAAgB,gBAChBC,GAAI,QALR,WAQE,SAACC,EAAA,EAAD,CACEX,KAAK,YACLY,MAAOnC,EAAKoC,aAAe,EAC3BC,UAAQ,IAETrC,EAAKoC,aAAaE,QAAQ,OAE7B,SAACR,EAAA,EAAD,CACES,QAAQ,QACRC,cAAY,EACZvB,UAAU,KACVX,GAAI,CACFmC,aAAc,WACd/B,SAAU,IACVgC,SAAU,SACVC,WAAY,UARhB,SAWG3C,EAAKsB,OAAStB,EAAKuB,kBAQnC,C,qECtEYH,EAAc,SAAAwB,GACzB,OAAIA,EACI,mCAAN,OAA0CA,GAErCC,CACR,C,gNCEoBC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAsBlB,OAtBkBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MACnB,WAUE,OACE,0BACE,SAAC,KAAD,kBAXa,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,YAAY,EACZC,eAAe,IAIb,aACGC,KAAKC,MAAMC,OAAOC,KAAI,SAAAC,GAAK,OAC1B,SAACC,EAAA,EAAD,CAAK1C,UAAU,MAAMX,GAAI,CAAEsD,EAAG,GAA9B,UACE,SAACC,EAAA,EAAD,CAAiC7D,KAAM0D,GAAhBA,EAAM9C,KAFL,QAQnC,OAtBkBkC,CAAoBgB,EAAAA,WCWzC,EAfa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAYC,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAUI,EAA3B,GAClB,GAAE,KAGD,6BACE,4CACA,SAACtB,EAAD,CAAaU,OAAQA,MAG1B,C","sources":["components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/utils/checkPoster.js","components/MovieSlider/MovieSlider.jsx","pages/Home.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\nimport { Link } from 'react-router-dom';\n\nexport const NewLink = styled(Link)(({ theme }) => ({\n  ...theme.typography.button,\n  backgroundColor: theme.palette.background.paper,\n  textDecoration: 'none',\n  color: 'inherit',\n  '&:hover': {\n    color: 'inherit',\n  },\n}));\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Rating,\n  CardActionArea,\n} from '@mui/material';\nimport { NewLink } from './MovieGalleryItem.styled';\nimport { checkPoster } from 'components/utils/checkPoster';\n\nconst MovieGalleryItem = ({ item }) => {\n  const location = useLocation();\n  return (\n    <Grid item xs={10} md={3} sx={{ margin: '0 auto' }}>\n      <CardActionArea>\n        <Card sx={{ maxWidth: 345 }}>\n          <NewLink to={`/movies/${item.id}`} state={{ from: location }}>\n            <CardMedia\n              sx={{ minHeight: 310 }}\n              component=\"img\"\n              height=\"80%\"\n              image={checkPoster(item.poster_path)}\n              title={item.name}\n              alt={item.name}\n            />\n            <CardContent\n              sx={{\n                flexShrink: 1,\n                display: 'flex',\n                flexDirection: 'column',\n                pt: '24px',\n              }}\n            >\n              <Typography\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  mb: '12px',\n                }}\n              >\n                <Rating\n                  name=\"read-only\"\n                  value={item.vote_average / 2}\n                  readOnly\n                />\n                {item.vote_average.toFixed(1)}\n              </Typography>\n              <Typography\n                variant=\"label\"\n                gutterBottom\n                component=\"h5\"\n                sx={{\n                  textOverflow: 'ellipsis',\n                  maxWidth: 345,\n                  overflow: 'hidden',\n                  whiteSpace: 'nowrap',\n                }}\n              >\n                {item.title || item.name}\n              </Typography>\n            </CardContent>\n          </NewLink>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n};\n\nexport default MovieGalleryItem;\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import noPoster from './no-poster-available.png';\n\nexport const checkPoster = img => {\n  if (img) {\n    return `https://image.tmdb.org/t/p/w500/${img}`;\n  }\n  return noPoster;\n};\n","// import { Grid } from '@mui/material';\n// import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport MovieGalleryItem from 'components/MovieGalleryItem/MovieGalleryItem';\n\nexport default class MovieSlider extends Component {\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      centerMode: true,\n      focusOnSelect: true,\n    };\n    return (\n      <div>\n        <Slider {...settings}>\n          {this.props.movies.map(movie => (\n            <Box component=\"div\" sx={{ p: 1 }}>\n              <MovieGalleryItem key={movie.id} item={movie} />\n            </Box>\n          ))}\n        </Slider>\n      </div>\n    );\n  }\n}\n\n// const MovieGallery = ({ movies }) => {\n//   return (\n//     <>\n//       <Grid container spacing={2} sx={{ mb: '32px' }}>\n//         {movies.map(movie => (\n//           <MovieGalleryItem key={movie.id} item={movie} />\n//         ))}\n//       </Grid>\n//     </>\n//   );\n// };\n\n// export default MovieSlider;\n\n// MovieGallery.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string,\n//       title: PropTypes.string,\n//     })\n//   ),\n// };\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { getMovies } from 'components/services/api';\nimport MovieSlider from 'components/MovieSlider/MovieSlider';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies().then(({ results }) => setMovies(results));\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MovieSlider movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n"],"names":["NewLink","styled","Link","theme","typography","button","backgroundColor","palette","background","paper","textDecoration","color","item","location","useLocation","Grid","xs","md","sx","margin","CardActionArea","Card","maxWidth","to","id","state","from","CardMedia","minHeight","component","height","image","checkPoster","poster_path","title","name","alt","CardContent","flexShrink","display","flexDirection","pt","Typography","alignItems","justifyContent","mb","Rating","value","vote_average","readOnly","toFixed","variant","gutterBottom","textOverflow","overflow","whiteSpace","img","noPoster","MovieSlider","dots","infinite","speed","slidesToShow","slidesToScroll","centerMode","focusOnSelect","this","props","movies","map","movie","Box","p","MovieGalleryItem","Component","useState","setMovies","useEffect","getMovies","then","results"],"sourceRoot":""}